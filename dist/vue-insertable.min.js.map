{"version":3,"file":"vue-insertable.min.js","sources":["../src/insert-view.ts","../src/insertable.ts","../src/install.ts","../src/browser.ts"],"sourcesContent":["import { RenderContext, VNode, CreateElement, VNodeData } from 'vue';\nimport Insertable from './insertable';\nfunction cloneVNodeData(data: VNodeData): VNodeData {\n\tconst {\n\t\tkey,\n\t\tslot,\n\t\tref,\n\t\tstaticClass,\n\t\tclass: className,\n\t\tstaticStyle,\n\t\tstyle,\n\t\tprops,\n\t\tattrs,\n\t\tdomProps,\n\t\ton,\n\t\tnativeOn,\n\t\tshow,\n\t\tdirectives,\n\t\tkeepAlive,\n\t} = data;\n\treturn {\n\t\tkey,\n\t\tslot,\n\t\tref,\n\t\trefInFor: true,\n\t\tstaticClass,\n\t\tclass: className,\n\t\tstaticStyle,\n\t\tstyle,\n\t\tprops: { ...props},\n\t\tattrs: { ...attrs},\n\t\tdomProps: { ...domProps},\n\t\ton: { ...on},\n\t\tnativeOn: { ...nativeOn},\n\t\tshow,\n\t\tdirectives: directives && [...directives],\n\t\tkeepAlive,\n\t}\n}\n\n// scopedSlots?: { [key: string]: ScopedSlot | undefined };\n// tag?: string;\n// hook?: { [key: string]: Function };\n// transition?: object;\n// inlineTemplate?: {\n//   render: Function;\n//   staticRenderFns: Function[];\n// };\n\nconst InsertView = ({\n\tname: 'InsertView',\n\tfunctional: true,\n\trender(\n\t\th: CreateElement,\n\t\t{ parent, props, data }: RenderContext<{ name: string; }> & { parent: {$insertable?: Insertable} }\n\t): VNode[] {\n\t\tconst { name } = props;\n\t\tconst { $insertable: insertable } = parent;\n\t\tif (!insertable){ return []; }\n\t\tconst list = insertable.get(name);\n\t\tif (!list) { return []; }\n\t\treturn list.map(t => h(t, cloneVNodeData(data)));\n\t},\n});\n\n\nexport default InsertView;\n","import { Component, AsyncComponent } from 'vue';\nimport install, { Vue } from './install';\nimport InsertView from './insert-view';\n\nexport type InsertableComponent = (string | Component<any, any, any, any> | AsyncComponent<any, any, any, any> | (() => Component));\nexport interface Info {\n\tcomponent: InsertableComponent;\n\torder: number;\n}\n\nexport interface Options {\n\tgroups?: {[key: string]: InsertableComponent | InsertableComponent[]}\n}\nclass Insertable {\n\tprivate _inited = false;\n\treadonly parent?: Insertable;\n\tprivate _groups: {[key: string]: Info[]} = Object.create(null);\n\tconstructor(options?: Options);\n\tconstructor(parent: Insertable, options?: Options);\n\tconstructor(parent?: Insertable | Options, options?: Options) {\n\t\tif (parent instanceof Insertable) {\n\t\t\tthis.parent = parent;\n\t\t} else {\n\t\t\t[parent, options] = [, parent];\n\t\t}\n\t\tconst { groups = {} } = options || {};\n\t\tfor (let k in groups) {\n\t\t\tthis.set(k, groups);\n\t\t}\n\t}\n\tprivate init(): {[key: string]: Info[]} {\n\t\tif (this._inited) { return this._groups; }\n\t\tif (!Vue) { return this._groups; }\n\t\tthis._inited = true;\n\t\tconst groups = Object.create(null);\n\t\tconst old = this._groups;\n\t\tfor (const k in old) {\n\t\t\tVue.set(groups, k, old[k]);\n\t\t}\n\t\tthis._groups = groups;\n\t\treturn groups;\n\t}\n\tadd(name: string, components: InsertableComponent | InsertableComponent[], order = 0) {\n\t\tconst groups = this.init();\n\t\tif (!Array.isArray(components)) { components = [components]; }\n\t\tconst list = groups[name] ? [...groups[name]] : [];\n\t\tlist.push(...components.map(component => ({ component, order })));\n\t\tlist.sort(({order: a}, {order: b}) => a - b);\n\t\tif (Vue) {\n\t\t\tVue.set(groups, name, list);\n\t\t} else {\n\t\t\tgroups[name] = list;\n\t\t}\n\t}\n\tremove(name: string): void;\n\tremove(name: string, component: InsertableComponent, order?: number): void;\n\tremove(name: string, component?: InsertableComponent, order = 0): void {\n\t\tconst groups = this.init();\n\t\tconst oldList = groups[name];\n\t\tif (!oldList) { return; }\n\t\tif (!component) {\n\t\t\tif (Vue) {\n\t\t\t\tVue.set(groups, name, []);\n\t\t\t} else {\n\t\t\t\tgroups[name] = [];\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tconst k = oldList.findIndex(t => t.component === component && t.order === order);\n\t\tif (k < 0) { return; }\n\t\tconst list = [...oldList.slice(0, k), ...oldList.slice(k + 1)];\n\t\tif (Vue) {\n\t\t\tVue.set(groups, name, list);\n\t\t} else {\n\t\t\tgroups[name] = list;\n\t\t}\n\t}\n\tset(name: string, components: InsertableComponent | InsertableComponent[], order = 0) {\n\t\tconst groups = this.init();\n\t\tif (!Array.isArray(components)) { components = [components]; }\n\t\tconst list = components.map(component => ({ component, order }));\n\t\tif (Vue) {\n\t\t\tVue.set(groups, name, list);\n\t\t} else {\n\t\t\tgroups[name] = list;\n\t\t}\n\t}\n\tprivate _getInfo(name: string, noParentList?: boolean): Info[] {\n\t\tconst groups = this.init();\n\t\tconst list = groups[name] || [];\n\t\tif (noParentList) { return list; }\n\t\tconst parentList = this.parent ? this.parent._getInfo(name) : [];\n\t\tconst allList = [...parentList, ...list];\n\t\tif (list.length && parentList.length) {\n\t\t\tallList.sort(({order: a}, {order: b}) => a - b);\n\t\t}\n\t\treturn allList;\n\t}\n\tget(name: string, noParentList?: boolean): InsertableComponent[] {\n\t\treturn this._getInfo(name, noParentList).map(({component}) => component);\n\t}\n\tstatic get install() { return install; };\n\tstatic get View() { return InsertView; };\n\tstatic readonly version = '__VERSION__';\n}\nexport default Insertable;\n","import { VueConstructor } from 'vue';\nimport Insertable from './insertable';\nimport InsertView from './insert-view';\nlet _vue: VueConstructor | undefined;\nexport default function install(Vue: VueConstructor) {\n\tif (_vue === Vue) { return; }\n\t_vue = Vue;\n\tObject.defineProperty(Vue.prototype, '$insertable', {\n\t\tget() { if (this.$parent) { return this.$parent.$insertable; } },\n\t\tconfigurable: true,\n\t});\n\tVue.component('InsertView', InsertView);\n\tVue.mixin({\n\t\tbeforeCreate(this: VueConstructor['prototype'] & {$insertable?: Insertable, $parent: {$insertable?: Insertable}}) {\n\t\t\tconst options = this.$options as {insertable?: Insertable | ((parent?: Insertable) => Insertable)};\n\t\t\tlet insertable =  options.insertable;\n\t\t\tif (typeof insertable === 'function') {\n\t\t\t\tinsertable = insertable(this.$parent && this.$parent.$insertable);\n\t\t\t}\n\t\t\tif (insertable instanceof Insertable) {\n\t\t\t\tObject.defineProperty(this, '$insertable', {\n\t\t\t\t\tvalue: insertable,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t});\n}\nexport {\n\t_vue as Vue,\n};\n","import Vue from 'vue';\nimport install from './install';\n\nif (Vue) { install(Vue); }\nexport { default } from './insertable';\n"],"names":["InsertView","name","functional","render","h","parent","props","data","$insertable","insertable","list","get","map","t","key","slot","ref","staticClass","class","className","staticStyle","style","attrs","domProps","on","nativeOn","show","directives","keepAlive","refInFor","cloneVNodeData","Insertable","constructor","options","Object","create","groups","k","set","init","this","_inited","_groups","Vue","old","add","components","order","Array","isArray","push","component","sort","a","b","remove","oldList","findIndex","slice","_getInfo","noParentList","parentList","allList","length","install","_vue","defineProperty","prototype","$parent","configurable","mixin","beforeCreate","$options","value"],"mappings":"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"}